name: Build & Publish

permissions:
  contents: write

on:
  push:
    branches: [ main ]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0         # damit wir später committen können
          persist-credentials: true  # nutzt GITHUB_TOKEN für push

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # --- jetzt alle Micro-Services durchbauen und pushen ---
      - name: Build & Push frontend
        uses: docker/build-push-action@v3
        with:
          context: frontend
          file: frontend/Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/webshop-frontend:${{ github.sha }}

      - name: Build & Push cart-service
        uses: docker/build-push-action@v3
        with:
          context: cart-service
          file: cart-service/Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/cart-service:${{ github.sha }}

      - name: Build & Push catalog-service
        uses: docker/build-push-action@v3
        with:
          context: catalog-service
          file: catalog-service/Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/catalog-service:${{ github.sha }}

      - name: Build & Push customer-service
        uses: docker/build-push-action@v3
        with:
          context: customer-service
          file: customer-service/Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/customer-service:${{ github.sha }}

      - name: Build & Push order-service
        uses: docker/build-push-action@v3
        with:
          context: order-service
          file: order-service/Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/order-service:${{ github.sha }}

      - name: Build & Push event-service
        uses: docker/build-push-action@v3
        with:
          context: event-service
          file: event-service/Dockerfile
          push: true
          tags: docker.io/${{ secrets.DOCKER_USERNAME }}/event-service:${{ github.sha }}


      # 4) Helm-Chart updaten
      - name: Bump Helm Chart Image Tags
        run: |
          # wir setzen in values.yaml für jeden Service das neue SHA-Tag
          yq eval -i ".frontend.image.tag = \"${GITHUB_SHA}\"" helm/webshop/values.yaml
          yq eval -i ".cartService.image.tag = \"${GITHUB_SHA}\"" helm/webshop/values.yaml
          # … analog für alle Services …
        env:
          GITHUB_SHA: ${{ github.sha }}

      # 5) Commit & Push values.yaml
      - name: Commit Chart Update
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          # 1) Hol Dir den neuesten Stand, stash automatisch unsere Änderungen:
          git pull --rebase origin main --autostash
          # 2) Stage & commit nur, wenn sich was geändert hat:
          git add helm/webshop/values.yaml
          git diff --quiet --cached || git commit -m "ci: bump helm images to ${GITHUB_SHA}"
          # 3) Push zurück nach main
          git push origin main
