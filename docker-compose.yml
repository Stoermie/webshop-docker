version: "3.8"

services:
  postgresdb:
    image: postgres:17
    environment:
      POSTGRES_USER: piData
      POSTGRES_PASSWORD: senta
      POSTGRES_DB: pidb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - type: bind
        source: ./db-init
        target: /docker-entrypoint-initdb.d
        read_only: true
    networks:
      - webshop-net
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U piData -d pidb -h localhost"]
      interval: 5s
      timeout: 5s
      retries: 5

  catalog-service:
    build: ./catalog-service
    container_name: catalog-service
    working_dir: /app
    volumes:
      - ./catalog-service:/app
    ports:
      - "8000:8000"
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
      - webshop-net
    environment:
      - EVENT_BUS_URL=http://event_bus:4005

  cart-service:
    build: ./cart-service
    container_name: cart-service
    working_dir: /app
    volumes:
      - ./cart-service:/app
    ports:
      - "8002:8002"
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
      - webshop-net
    environment:
      - EVENT_BUS_URL=http://event_bus:4005

  customer-service:
    build: ./customer-service
    container_name: customer-service
    working_dir: /app
    volumes:
      - ./customer-service:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8001 --reload --app-dir /app
    environment:
      - DATABASE_URL=postgresql://piData:senta@postgresdb:5432/customer_db
      - EVENT_BUS_URL=http://event_bus:4005
    ports:
      - "8001:8001"
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
      - webshop-net

  order-service:
    build: ./order-service
    container_name: order-service
    working_dir: /app
    volumes:
      - ./order-service:/app 
    ports:            
      - "8003:8003"
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
      - webshop-net
    environment:
      - EVENT_BUS_URL=http://event_bus:4005

  event_bus:
    build: ./event-service
    container_name: event-service
    working_dir: /app
    volumes:
      - ./event-service:/app
    ports:
      - "4005:4005"
    depends_on:
      - catalog-service
      - cart-service
      - customer-service
      - order-service
    networks:
      - webshop-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: dev
    container_name: webshop_frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3001:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - NPM_CONFIG_AUDIT=false
      - NPM_CONFIG_FUND=false
      - NODE_OPTIONS=--no-deprecation
    depends_on:
      postgresdb:
        condition: service_healthy
    networks:
      - webshop-net

volumes:
  pgdata:

networks:
  webshop-net:
