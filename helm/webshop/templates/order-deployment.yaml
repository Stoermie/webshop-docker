
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-order
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-order
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}-order
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}-order
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "{{ .Values.order.port }}"
    spec:
      containers:
        - name: order
          image: "{{ .Values.order.image.repository }}:{{ .Values.order.image.tag }}"
          command:
            - python
            - -m
            - uvicorn
            - main:app
            - --host
            - "0.0.0.0"
            - --port
            - "{{ .Values.order.port }}"
          ports:
            - name: http
              containerPort: {{ .Values.order.port }}
            - name: metrics
              containerPort: {{ .Values.order.port }}
          env:
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ .Values.postgresql.primary.service.host }}:{{ .Values.postgresql.primary.service.port }}/{{ .Values.order.database }}"
            - name: EVENT_BUS_URL
              value: "http://{{ .Release.Name }}-eventbus:{{ .Values.eventbus.port }}"
