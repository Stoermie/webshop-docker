apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-frontend
  labels:
    app.kubernetes.io/name:      {{ .Release.Name }}-frontend
    app.kubernetes.io/instance:  {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name:     {{ .Release.Name }}-frontend
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name:     {{ .Release.Name }}-frontend
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        prometheus.io/path: "/metrics"
        prometheus.io/port: "{{ .Values.frontend.port }}"
    spec:
      containers:
        - name: frontend
          image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
          ports:
            - containerPort: {{ .Values.frontend.port }}
          env:
            - name: REACT_APP_API_CATALOG
              value: "{{ .Values.frontend.api.catalog }}"
            - name: REACT_APP_API_CART     # <– Basis‐URL für Cart
              value: "{{ .Values.frontend.api.cart }}"
            - name: REACT_APP_API_CUSTOMER
              value: "{{ .Values.frontend.api.customer }}"
            - name: REACT_APP_API_ORDER
              value: "{{ .Values.frontend.api.order }}"
            - name: REACT_APP_API_EVENTS
              value: "{{ .Values.frontend.api.events }}"
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.frontend.port }}
            initialDelaySeconds: 10
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.frontend.port }}
            initialDelaySeconds: 5
            periodSeconds: 5
