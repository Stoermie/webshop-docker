# values.yaml

replicaCount: 2

# Catalog-Service
catalog:
  image:
    repository: docker.io/stoermi/catalog-service
    tag: arm64-latest
  port: 8001
  database: catalog_db
  service:
    type: NodePort
    port: 8001
    nodePort: 30081

# Cart-Service
cart:
  image:
    repository: docker.io/stoermi/cart-service
    tag: arm64-latest
  port: 8002
  database: cart_db
  service:
    type: NodePort
    port: 8002
    nodePort: 30082

# Customer-Service
customer:
  image:
    repository: docker.io/stoermi/customer-service
    tag: arm64-latest
  port: 8003
  database: customer_db
  service:
    type: NodePort
    port: 8003
    nodePort: 30083

# Order-Service
order:
  image:
    repository: docker.io/stoermi/order-service
    tag: arm64-latest
  port: 8004
  database: order_db
  service:
    type: NodePort
    port: 8004
    nodePort: 30084

# Event-Bus
eventbus:
  image:
    repository: docker.io/stoermi/event-service
    tag: arm64-latest
  port: 4005
  service:
    type: NodePort
    port: 4005
    nodePort: 30085

# Frontend
frontend:
  image:
    repository: docker.io/stoermi/frontend
    tag: arm64-latest
  port: 80
  service:
    type: NodePort
    port: 80
    nodePort: 30080

  # Absolute Endpunkte auf die NodePorts
  api:
    catalog:  "http://192.168.178.122:30081/api/articles"
    cart:     "http://192.168.178.122:30082/api/carts"
    customer: "http://192.168.178.122:30083/api/customers"
    order:    "http://192.168.178.122:30084/api/orders"
    events:   "http://192.168.178.122:30085/events"

# PostgreSQL
postgresql:
  image:
    registry: docker.io
    repository: postgres
    tag: 15-alpine

  auth:
    postgresPassword: senta
    username: pidata
    password: senta
    database: postgres

  primary:
    initdb:
      scripts:
        init-dbs.sh: |-
          #!/bin/bash
          psql --username "$POSTGRESQL_USERNAME" <<-EOSQL
            CREATE DATABASE IF NOT EXISTS catalog_db  OWNER pidata;
            CREATE DATABASE IF NOT EXISTS customer_db OWNER pidata;
            CREATE DATABASE IF NOT EXISTS order_db    OWNER pidata;
            CREATE DATABASE IF NOT EXISTS cart_db     OWNER pidata;
          EOSQL
    service:
      type: NodePort
      ports:
        postgresql: 5432
      nodePorts:
        postgresql: 30016
    serviceName: webshop-postgresql
    port:        5432

# Kein Ingress mehr, wir exposen alles Ã¼ber NodePort
ingress:
  enabled: false

extraDeploy:
  - templates/initdb-job.yaml
